common:
    base-url: "/build/api" 
    store-type: local
    hosts:
        - http://127.0.0.1:8080
        # - http://127.0.0.1:8090

flows:
    - id: build-project              # the name of this flow
      name: Build Project
      ver: 1
      reuse-space: false               # reuse the workspace (false) - if true /single used 
      resource-tags: [couchbase, nic] # resource labels that any other flows cant share
      host-tags: [linux, go, couch]   # all these tags must match the tags on any host for it to be able to run there

      triggers:                      # external events to subscribe to
        - name: push                 # name of this trigger
          type: git-push             # the type of this trigger
          opts:
            url: blah.blah           # which url to monitor

        - name: start
          type: data
          opts:
            form:
              title: Start
              fields:
                - id: ref
                  prompt: Ref (branch or hash)
                  type: text
                  value: master
                - id: from-ref
                  prompt: Ref to merge (branch or hash)
                  type: text 
            
      tasks: 
        - name: Checkout             # the name of this node 
          type: git-merge            # the task type 
          listen: trigger.good       # the event tag that triggers this node
          good: [0]                  # define what the good statuses are, default [0]
          ignore-fail: false         # if true only emit good
          opts:
            sub-dir: src/github.com/floeit
            url: git@github.com:floeit/floe.git
        
        - name: Echo
          type: exec
          listen: task.checkout.good
          opts:
            cmd: "echo"
            args: "'dan is a goon'"
            file: "BUILD.floe"         # the command to execute 

        - name: Build                
          type: exec
          listen: task.checkout.good    
          opts:
            cmd: "ls"        # the command to execute 
            args: "-lrt /"

        - name: Test
          type: exec                 # execute a command
          listen: task.build.good    
          opts:
            cmd: "sleep"         # the command to execute 
            args: "10"

        - name: Sign Off
          type: data
          listen: task.build.good    # for a data node this event has to have occured before the data node can accept data
          opts:
            form:
              title: Sign off Manual Testing
              fields:
                - id: tests_passed
                  prompt: Did the manual testing pass?
                  type: bool
                - id: to_hash
                  prompt: To Branch (or hash)
                  type: string

        - name: Wait For Tests and Sign Off
          class: merge
          id: signed
          type: all
          wait: [task.echo.good, task.test.good, task.sign-off.good]

        - name: Final Task
          type: exec                 # execute a command
          listen: merge.signed.good
          opts:
            cmd: "ls"         # the command to execute 

        - name: complete
          listen: task.final-task.good
          type: end                 # getting here means the flow was a success 'end' is the special definitive end event

    - id: danmux
      ver: 1
      
      triggers:
        - name: start
          type: data
          opts:
            form:
              title: Start
              fields:
                - id: ref
                  prompt: Git Ref (branch or hash etc)
                  type: text
        
        - name: Every 5 Minutes
          type: timer                # fires every period seconds
          opts:
            period: 300               # how often to fire in seconds

      tasks: 
        - name: Checkout
          listen: trigger.good
          type: git-checkout
          opts:
            url: git@github.com:floeit/floe.git
            sub-dir: src/github.com/floeit
        
        - name: Go Version
          listen: trigger.good
          type: exec
          opts:
            cmd: "go version"

        - name: Wait
          class: merge
          wait: 
            - task.go-version.good
            - task.checkout.good

        - name: done
          listen: task.wait.good
          type: end